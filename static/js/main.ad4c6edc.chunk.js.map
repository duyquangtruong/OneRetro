{"version":3,"sources":["components/login/login.js","images/logo.png","images/avatar.jpeg","components/header/header.js","images/add.png","components/boards/boards.js","components/users/users.js","components/boards/boardDetail.js","index.js"],"names":["Login","useState","isFetched","isShowModal","status","setStatus","submitInfo","setSubmitInfo","userInfo","setUserInfo","errorMessage","setErrorMessage","history","useHistory","useEffect","fetch","mode","method","headers","body","JSON","stringify","username","password","isRemember","then","response","json","data","Object","keys","length","some","k","error","sessionStorage","setItem","_id","name","push","Modal","show","Dialog","Header","closeButton","Title","Body","Footer","Button","variant","onClick","className","Card","style","width","Form","onSubmit","e","currentTarget","value","preventDefault","action","Group","controlId","Label","Control","type","placeholder","required","Check","label","getItem","userFullname","Navbar","bg","Brand","href","alt","src","logo","height","Collapse","id","Nav","borderRadius","avatar","NavDropdown","title","Item","Divider","RetroList","isUpdateList","boardList","boards","setBoards","request","createRequest","setCreateRequest","userId","createdBy","res","catch","err","console","log","description","result","createBoard","borderStyle","borderColor","addIcon","map","board","index","Text","event","handleCreateSubmit","as","rows","Boards","Users","showModal","setShowModal","isFetch","setIsFetch","isSuccess","setIsSuccess","getUserInfo","email","createdAt","Toast","onClose","position","bottom","right","size","form","newName","newEmail","ListGroup","ListGroupItem","Date","toDateString","Link","CardList","Row","Col","AddButton","BoardDetail","Index","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wPAkJeA,MApIf,WAAkB,IAAD,EACaC,mBAAS,CACnCC,WAAW,EACXC,aAAa,IAHA,mBACRC,EADQ,KACAC,EADA,OAKqBJ,mBAAS,IAL9B,mBAKRK,EALQ,KAKIC,EALJ,OAMiBN,mBAAS,IAN1B,mBAMRO,EANQ,KAMEC,EANF,OAOyBR,mBAAS,IAPlC,mBAORS,EAPQ,KAOMC,EAPN,KAQTC,EAAUC,cA2ChB,OAzCAC,qBAAU,WACJV,EAAOF,WACTa,MAdM,8BAcK,CACTC,KAAM,OACNC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAUhB,EAAWgB,SACrBC,SAAUjB,EAAWiB,SACrBC,WAAYlB,EAAWkB,eAGxBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLnB,EAAYmB,QAGjB,CAACxB,IAEJU,qBAAU,WACJV,EAAOF,YAE0B,IAAjC2B,OAAOC,KAAKtB,GAAUuB,QACtBF,OAAOC,KAAKtB,GAAUwB,MAAK,SAACC,GAAD,MAAa,UAANA,MA5CP,MA8CvBzB,EAAS0B,MACXvB,EA3CR,gEA6CQA,EA5C0B,oBA8C5BN,EAAU,CAAEH,WAAW,EAAOC,aAAa,MAE3CgC,eAAeC,QAAQ,MAAO5B,EAAS6B,KACvCF,eAAeC,QAAQ,WAAY5B,EAAS8B,MAC5C1B,EAAQ2B,KAAK,eAGhB,CAAC/B,IAGF,gCACE,8BACE,cAACgC,EAAA,EAAD,CAAOC,KAAMrC,EAAOD,YAApB,SACE,eAACqC,EAAA,EAAME,OAAP,WACE,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,4BAEF,cAACL,EAAA,EAAMM,KAAP,UACE,4BAAIpC,MAEN,cAAC8B,EAAA,EAAMO,OAAP,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,WACP7C,EAAU,CAAEH,WAAW,EAAOC,aAAa,KAH/C,4BAYR,sBAAKgD,UAAU,iBAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,uDAEF,qBAAKA,UAAU,qCAAf,SACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,OAAtB,SACE,cAACF,EAAA,EAAKN,KAAN,UACE,eAACS,EAAA,EAAD,CACEC,SAAU,SAACC,GACTpD,EAAU,CAAEH,WAAW,EAAMC,aAAa,IAC1CI,EAAc,CACZe,SAAUmC,EAAEC,cAAcpC,SAASqC,MACnCpC,SAAUkC,EAAEC,cAAcnC,SAASoC,MACnCnC,WAAYiC,EAAEC,cAAclC,WAAWmC,QAEzCF,EAAEG,kBAEJC,OAAO,UAVT,UAYE,eAACN,EAAA,EAAKO,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACR,EAAA,EAAKS,MAAN,uBACA,cAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,OACL5B,KAAK,WACL6B,YAAY,iBACZC,UAAQ,OAIZ,eAACb,EAAA,EAAKO,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACR,EAAA,EAAKS,MAAN,uBACA,cAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,WACLC,YAAY,WACZ7B,KAAK,WACL8B,UAAQ,OAGZ,cAACb,EAAA,EAAKO,MAAN,CAAYC,UAAU,oBAAtB,SACE,cAACR,EAAA,EAAKc,MAAN,CACEH,KAAK,WACLI,MAAM,gBACNhC,KAAK,iBAGT,cAACU,EAAA,EAAD,CAAQG,UAAU,GAAGF,QAAQ,UAAUiB,KAAK,SAA5C,mCCtID,MAA0B,iCCA1B,MAA0B,oC,wBCiD1BvB,MA3Cf,WACiBR,eAAeoC,QAAQ,OAAtC,IACMC,EAAerC,eAAeoC,QAAQ,YAE5C,OACE,8BACE,eAACE,EAAA,EAAD,CAAQC,GAAG,OAAOzB,QAAQ,OAA1B,UACE,eAACwB,EAAA,EAAOE,MAAR,CAAcC,KAAK,UAAnB,UACE,qBACEC,IAAI,GACJC,IAAKC,EACLzB,MAAM,KACN0B,OAAO,KACP7B,UAAU,6BACT,IAPL,cAUA,eAACsB,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,wBAApB,UACE,cAACC,EAAA,EAAD,CAAKhC,UAAU,WACf,eAACgC,EAAA,EAAD,WACE,qBACEhC,UAAU,OACVE,MAAO,CAAE+B,aAAc,OACvB9B,MAAM,KACN0B,OAAO,KACPF,IAAKO,IAEP,eAACC,EAAA,EAAD,CACEnC,UAAU,SACVoC,MAAOf,EACPU,GAAG,qBAHL,UAKE,cAACI,EAAA,EAAYE,KAAb,CAAkBZ,KAAK,SAAvB,0BACA,cAACU,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBZ,KAAK,cAAvB,oCCxCC,G,MAAA,IAA0B,iCCuBzC,SAASc,IAAa,IAAD,EACSzF,mBAAS,CACnC0F,cAAc,EACdC,UAAW,KAHM,mBACZC,EADY,KACJC,EADI,OAKuB7F,mBAAS,CACjDE,aAAa,EACb4F,QAAS,KAPQ,mBAKZC,EALY,KAKGC,EALH,KASbC,EAAS/D,eAAeoC,QAAQ,OAatCzD,qBAAU,WACJ+E,EAAOF,cACT5E,MAxCqB,+BAwCK,CACxBC,KAAM,OACNC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB8E,UAAWD,MAGZzE,MAAK,SAAC2E,GAAD,OAASA,EAAIzE,UAClBF,MAAK,SAAC2E,GACLN,EAAU,CAAEH,cAAc,EAAOC,UAAWQ,OAE7CC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZR,EAAU,CAAEH,cAAc,EAAOC,UAAW,UAGjD,CAACC,IAEJ/E,qBAAU,WAENkF,EAAc7F,aACgC,IAA9C0B,OAAOC,KAAKkE,EAAcD,SAAShE,QAEnChB,MAjEmB,sCAiEK,CACtBC,KAAM,OACNC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBiB,KAAM0D,EAAcD,QAAQzD,KAC5BmE,YAAaT,EAAcD,QAAQU,YACnCN,UAAWH,EAAcD,QAAQI,cAGlC1E,MAAK,SAAC2E,GAAD,OAASA,EAAIzE,UAClBF,MAAK,SAAC2E,GACc,MAAfA,EAAIM,QACNZ,EAAU,CAAEH,cAAc,EAAMC,UAAWQ,EAAIR,YAC/CK,EAAiB,CAAE9F,aAAa,EAAO4F,QAAS,MAEhDQ,QAAQC,IAAIJ,EAAIM,WAGnBL,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAGjB,CAACN,IAEJ,IAAMW,EACJ,qBACExD,UAAU,cACVE,MAAO,CACLuD,YAAa,SACbC,YAAa,aAJjB,SAOE,qBACE/B,IAAKgC,EACLzD,MAAO,CAAEC,MAAO,OAAQ0B,OAAQ,QAChC9B,QAAS,kBAAM+C,EAAiB,CAAE9F,aAAa,EAAM4F,QAAS,UAK9DH,EADOC,EAAOD,UACGmB,KAAI,SAACC,EAAOC,GACjC,OACE,qBAAK9D,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACE,eAACF,EAAA,EAAKN,KAAN,WACE,cAACM,EAAA,EAAKP,MAAN,UAAamE,EAAM1E,OACnB,cAACc,EAAA,EAAK8D,KAAN,UAAYF,EAAMP,cAClB,cAACzD,EAAA,EAAD,CAAQG,UAAU,SAASF,QAAQ,UAAnC,8BAQV,OACE,gCACE,8BACE,eAACT,EAAA,EAAD,CAAOC,KAAMuD,EAAc7F,YAA3B,UACE,cAACqC,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMK,MAAP,CAAaM,UAAU,SAAvB,4BAGF,cAACX,EAAA,EAAMM,KAAP,UACE,eAACS,EAAA,EAAD,CACEC,SAAU,SAAC2D,IA3GvB,SAA4BA,GAC1BlB,EAAiB,CACf9F,aAAa,EACb4F,QAAS,CACPzD,KAAM6E,EAAMzD,cAAcpB,KAAKqB,MAC/B8C,YAAaU,EAAMzD,cAAc+C,YAAY9C,MAC7CwC,UAAWD,KAsGHkB,CAAmBD,GACnBA,EAAMvD,kBAHV,UAME,eAACL,EAAA,EAAKO,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACR,EAAA,EAAKS,MAAN,mBACA,cAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,OACL5B,KAAK,OACL6B,YAAY,mBACZC,UAAQ,IAEV,cAACb,EAAA,EAAKS,MAAN,0BACA,cAACT,EAAA,EAAKU,QAAN,CACEoD,GAAG,WACH/E,KAAK,cACLgF,KAAM,EACNnD,YAAY,wCAGhB,eAAC3B,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,kBACP+C,EAAiB,CAAE9F,aAAa,EAAO4F,QAAS,MAHpD,mBAQA,cAAC/C,EAAA,EAAD,CAAQC,QAAQ,UAAUiB,KAAK,SAA/B,iCAQV,sBAAKf,UAAU,YAAf,UACGwD,EACAf,QAMM2B,MAjLf,WACE,OACE,gCACE,cAAC,EAAD,IACA,sBAAKpE,UAAU,eAAf,UACE,2CACA,uBACA,cAACuC,EAAD,W,wBCgLO8B,MAhLf,WAAkB,IAAD,EACmBvH,oBAAS,GAD5B,mBACRwH,EADQ,KACGC,EADH,OAEezH,oBAAS,GAFxB,mBAER0H,EAFQ,KAECC,EAFD,OAGmB3H,oBAAS,GAH5B,mBAGR4H,EAHQ,KAGGC,EAHH,OAIiB7H,mBAAS,IAJ1B,mBAIRO,EAJQ,KAIEC,EAJF,KAOf,SAASsH,IACPhH,MAVqB,8BAUG,CACtBE,OAAQ,OACRD,KAAM,OACNE,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBgB,IAAKF,eAAeoC,QAAQ,WAG7B9C,MAAK,SAAC2E,GAAD,OAASA,EAAIzE,UAClBF,MAAK,SAAC2E,GACc,MAAfA,EAAIM,OACNjG,EAAY,CACV6B,KAAM8D,EAAI5F,SAAS8B,KACnBhB,SAAU8E,EAAI5F,SAASc,SACvB0G,MAAO5B,EAAI5F,SAASwH,MACpBC,UAAW7B,EAAI5F,SAASyH,YAG1B1B,QAAQC,IAAIJ,EAAIM,WAwDxB,OA9BA5F,qBAAU,WAC6B,IAAjCe,OAAOC,KAAKtB,GAAUuB,QACxBgG,MAED,CAACvH,IAEJM,qBAAU,WACJ6G,GA3BJ5G,MAnCwB,qCAmCG,CACzBE,OAAQ,OACRD,KAAM,OACNE,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAUd,EAASc,SACnBgB,KAAM9B,EAAS8B,KACf0F,MAAOxH,EAASwH,UAGjBvG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACe,MAAhBA,EAAK8E,SACPoB,GAAa,GACbC,UAcL,CAACJ,IAqBF,gCACE,8BACE,eAACO,EAAA,EAAD,CACEzF,KAAMoF,EACNM,QAAS,kBAAML,GAAa,IAC5BzE,MAAO,CACL+E,SAAU,WACVC,OAAQ,GACRC,MAAO,IANX,UASE,cAACJ,EAAA,EAAMvF,OAAP,UACE,wBAAQQ,UAAU,UAAlB,uBAEF,cAAC+E,EAAA,EAAMpF,KAAP,iDAGJ,8BACE,eAACN,EAAA,EAAD,CAAOC,KAAMgF,EAAWc,KAAK,KAA7B,UACE,cAAC/F,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,4BAGF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACS,EAAA,EAAD,CAAMC,SA3ChB,SAAsB2D,GACpB,IAAMqB,EAAOrB,EAAMzD,cACb+E,EAAUD,EAAKlG,KAAKqB,MACpB+E,EAAWF,EAAKR,MAAMrE,MAC5BlD,EAAY,CACVa,SAAUd,EAASc,SACnBgB,KAAMmG,EACNT,MAAOU,EACPT,UAAWzH,EAASyH,YAGtBL,GAAW,GAEXT,EAAMvD,iBACN8D,GAAa,GACbE,GAAW,IA4B2B/D,OAAO,gBAArC,UACE,eAACN,EAAA,EAAKO,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACR,EAAA,EAAKS,MAAN,uBACA,cAACT,EAAA,EAAKU,QAAN,CACE3B,KAAK,OACL4B,KAAK,OACLC,YAAY,WACZC,UAAQ,OAGZ,eAACb,EAAA,EAAKO,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACR,EAAA,EAAKS,MAAN,4BACA,cAACT,EAAA,EAAKU,QAAN,CACE3B,KAAK,QACL4B,KAAK,QACLC,YAAY,cACZC,UAAQ,IAEV,cAACb,EAAA,EAAK2D,KAAN,CAAW/D,UAAU,aAArB,+DAIF,eAACX,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,WACPwE,GAAa,IAHjB,mBAQA,cAAC1E,EAAA,EAAD,CAAQC,QAAQ,UAAUiB,KAAK,SAA/B,uCAQV,gCACE,cAAC,EAAD,IACA,sBAAKf,UAAU,eAAf,UACE,6CACA,uBACA,qBAAKA,UAAU,qCAAf,SACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,qBAAKH,UAAU,SAAS2B,IAAKO,EAAQ/B,MAAM,MAAM0B,OAAO,QACxD,eAAC5B,EAAA,EAAKN,KAAN,CAAWK,UAAU,SAArB,UACE,cAACC,EAAA,EAAKP,MAAN,UAAarC,EAAS8B,OACtB,eAACc,EAAA,EAAK8D,KAAN,wBAAsB1G,EAASc,eAEjC,eAACqH,EAAA,EAAD,CAAWxF,UAAU,mBAArB,UACE,eAACyF,EAAA,EAAD,qBAAuBpI,EAASwH,SAChC,eAACY,EAAA,EAAD,0BACe,IAAIC,KAAKrI,EAASyH,WAAWa,qBAG9C,eAAC1F,EAAA,EAAKN,KAAN,WACE,cAACM,EAAA,EAAK2F,KAAN,CAAW7F,QAAS,kBAAMwE,GAAa,IAAvC,kBACA,cAACtE,EAAA,EAAK2F,KAAN,CAAWnE,KAAK,IAAhB,8C,gCCtKhB,SAASoE,IACP,OACE,gCACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,6CAEF,cAACA,EAAA,EAAD,UACE,8CAEF,cAACA,EAAA,EAAD,UACE,mDAIJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK/F,UAAU,YAAf,SACE,qBAAK2B,IAAKqE,EAAW9F,MAAO,CAAEC,MAAO,UAEvC,cAAC4F,EAAA,EAAD,CAAK/F,UAAU,YAAf,SACE,qBAAK2B,IAAKqE,EAAW7F,MAAM,SAE7B,cAAC4F,EAAA,EAAD,CAAK/F,UAAU,YAAf,SACE,qBAAK2B,IAAKqE,EAAW7F,MAAM,YAI/B,eAAC2F,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACkC,MAAO,CAAEC,MAAO,OAA3B,UACG,IADH,aAKF,eAAC2F,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACkC,MAAO,CAAEC,MAAO,OAA3B,UACG,IADH,aAKF,eAAC2F,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACkC,MAAO,CAAEC,MAAO,OAA3B,UACG,IADH,gBAMJ,eAAC4F,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACkC,MAAO,CAAEC,MAAO,OAA3B,UACG,IADH,aAKF,eAAC2F,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACkC,MAAO,CAAEC,MAAO,OAA3B,UACG,IADH,aAKF,eAAC2F,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACkC,MAAO,CAAEC,MAAO,OAA3B,UACG,IADH,gBAMJ,eAAC4F,EAAA,EAAD,CAAK/F,UAAU,SAAf,UACE,eAAC8F,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,cAACC,EAAA,EAAD,CAAMjC,MAAI,EAAV,sBAEF,eAAC8H,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,eAACC,EAAA,EAAD,CAAMjC,MAAI,EAACgC,UAAU,GAArB,UACG,IADH,aAKF,eAAC8F,EAAA,EAAD,CAAK9F,UAAU,yBAAf,UACG,IACD,cAACC,EAAA,EAAD,CAAMjC,MAAI,EAAV,+BAQGiI,MA3Gf,WACE,OACE,gCACE,cAAC,EAAD,IACA,qBAAKjG,UAAU,eAAf,SACE,cAAC6F,EAAD,UCGR,SAASK,IACP,OACE,cAAC,IAAD,UACE,gCACE,cAAC,IAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,UAAWxJ,IACtC,cAAC,IAAD,CAAOsJ,KAAK,iBAAiBC,OAAK,EAACC,UAAWJ,IAC9C,cAAC,IAAD,CAAOE,KAAK,UAAUC,OAAK,EAACC,UAAWjC,IACvC,cAAC,IAAD,CAAO+B,KAAK,SAASC,OAAK,EAACC,UAAWhC,SAM9CiC,IAASC,OAAO,cAACL,EAAD,IAAWM,SAASC,eAAe,W","file":"static/js/main.ad4c6edc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Card, Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ERRORCODE_INVALID_USERNAME = 400;\r\nconst ERRORCODE_WRONG_PASSWORD = 401;\r\n\r\nconst ERRORMESSAGE_INVALID_USERNAME =\r\n  \"Invalid Username ! \\n Please try again or create an account.\";\r\nconst ERRORMESSAGE_WRONG_PASSWORD = \"Wrong password !\";\r\n\r\nconst API = \"http://localhost:3001/login\";\r\n\r\nfunction Login() {\r\n  const [status, setStatus] = useState({\r\n    isFetched: false,\r\n    isShowModal: false,\r\n  });\r\n  const [submitInfo, setSubmitInfo] = useState({});\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status.isFetched) {\r\n      fetch(API, {\r\n        mode: \"cors\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: submitInfo.username,\r\n          password: submitInfo.password,\r\n          isRemember: submitInfo.isRemember,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUserInfo(data);\r\n        });\r\n    }\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    if (status.isFetched) {\r\n      if (\r\n        Object.keys(userInfo).length === 0 ||\r\n        Object.keys(userInfo).some((k) => k === \"error\")\r\n      ) {\r\n        if (userInfo.error === ERRORCODE_INVALID_USERNAME) {\r\n          setErrorMessage(ERRORMESSAGE_INVALID_USERNAME);\r\n        } else {\r\n          setErrorMessage(ERRORMESSAGE_WRONG_PASSWORD);\r\n        }\r\n        setStatus({ isFetched: false, isShowModal: true });\r\n      } else {\r\n        sessionStorage.setItem(\"_id\", userInfo._id);\r\n        sessionStorage.setItem(\"fullname\", userInfo.name);\r\n        history.push(\"/boards\");\r\n      }\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Modal show={status.isShowModal}>\r\n          <Modal.Dialog>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Login Error</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>{errorMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => {\r\n                  setStatus({ isFetched: false, isShowModal: false });\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h1>Welcome to OneRetro</h1>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          <Card style={{ width: \"50%\" }}>\r\n            <Card.Body>\r\n              <Form\r\n                onSubmit={(e) => {\r\n                  setStatus({ isFetched: true, isShowModal: false });\r\n                  setSubmitInfo({\r\n                    username: e.currentTarget.username.value,\r\n                    password: e.currentTarget.password.value,\r\n                    isRemember: e.currentTarget.isRemember.value,\r\n                  });\r\n                  e.preventDefault();\r\n                }}\r\n                action=\"/boards\"\r\n              >\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter username\"\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Keep me login\"\r\n                    name=\"isRemember\"\r\n                  />\r\n                </Form.Group>\r\n                <Button className=\"\" variant=\"primary\" type=\"submit\">\r\n                  Login\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/logo.e7601552.png\";","export default __webpack_public_path__ + \"static/media/avatar.aa51ea5f.jpeg\";","import logo from \"../../images/logo.png\";\r\nimport { useState, useEffect } from \"react\";\r\nimport avatar from \"../../images/avatar.jpeg\";\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nconst GET_USER_API = \"http://localhost:3001/users\";\r\n\r\nfunction Header() {\r\n  const userId = sessionStorage.getItem(\"_id\");\r\n  const userFullname = sessionStorage.getItem(\"fullname\");\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/boards\">\r\n          <img\r\n            alt=\"\"\r\n            src={logo}\r\n            width=\"35\"\r\n            height=\"35\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"}\r\n          OneRetro\r\n        </Navbar.Brand>\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"m-auto\"></Nav>\r\n          <Nav>\r\n            <img\r\n              className=\"mr-2\"\r\n              style={{ borderRadius: \"50%\" }}\r\n              width=\"50\"\r\n              height=\"50\"\r\n              src={avatar}\r\n            />\r\n            <NavDropdown\r\n              className=\"m-auto\"\r\n              title={userFullname}\r\n              id=\"basic-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item href=\"/users\">Account Info</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">Log out</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/add.83cf5272.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Modal, Form } from \"react-bootstrap\";\r\nimport Header from \"../header/header\";\r\nimport \"./boards.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport addIcon from \"../../images/add.png\";\r\n\r\nconst GET_BOARD_LIST_API = \"http://localhost:3001/boards\";\r\nconst CREATE_BOARD_API = \"http://localhost:3001/boards/create\";\r\n\r\nfunction Boards() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"page-content\">\r\n        <h3>My Boards</h3>\r\n        <hr />\r\n        <RetroList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RetroList() {\r\n  const [boards, setBoards] = useState({\r\n    isUpdateList: true,\r\n    boardList: [],\r\n  });\r\n  const [createRequest, setCreateRequest] = useState({\r\n    isShowModal: false,\r\n    request: {},\r\n  });\r\n  const userId = sessionStorage.getItem(\"_id\");\r\n\r\n  function handleCreateSubmit(event) {\r\n    setCreateRequest({\r\n      isShowModal: true,\r\n      request: {\r\n        name: event.currentTarget.name.value,\r\n        description: event.currentTarget.description.value,\r\n        createdBy: userId,\r\n      },\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (boards.isUpdateList) {\r\n      fetch(GET_BOARD_LIST_API, {\r\n        mode: \"cors\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          createdBy: userId,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          setBoards({ isUpdateList: false, boardList: res });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setBoards({ isUpdateList: false, boardList: [] });\r\n        });\r\n    }\r\n  }, [boards]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      createRequest.isShowModal &&\r\n      Object.keys(createRequest.request).length !== 0\r\n    ) {\r\n      fetch(CREATE_BOARD_API, {\r\n        mode: \"cors\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: createRequest.request.name,\r\n          description: createRequest.request.description,\r\n          createdBy: createRequest.request.createdBy,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.result === 201) {\r\n            setBoards({ isUpdateList: true, boardList: res.boardList });\r\n            setCreateRequest({ isShowModal: false, request: {} });\r\n          } else {\r\n            console.log(res.result);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [createRequest]);\r\n\r\n  const createBoard = (\r\n    <div\r\n      className=\"boardCreate\"\r\n      style={{\r\n        borderStyle: \"dotted\",\r\n        borderColor: \"lightgray\",\r\n      }}\r\n    >\r\n      <img\r\n        src={addIcon}\r\n        style={{ width: \"70px\", height: \"70px\" }}\r\n        onClick={() => setCreateRequest({ isShowModal: true, request: {} })}\r\n      ></img>\r\n    </div>\r\n  );\r\n  const list = boards.boardList;\r\n  const boardList = list.map((board, index) => {\r\n    return (\r\n      <div className=\"boardItems\">\r\n        <Card style={{ width: \"18rem\" }}>\r\n          <Card.Body>\r\n            <Card.Title>{board.name}</Card.Title>\r\n            <Card.Text>{board.description}</Card.Text>\r\n            <Button className=\"m-auto\" variant=\"primary\">\r\n              Detail\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Modal show={createRequest.isShowModal}>\r\n          <Modal.Header>\r\n            <Modal.Title className=\"m-auto\">Create Board</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form\r\n              onSubmit={(event) => {\r\n                handleCreateSubmit(event);\r\n                event.preventDefault();\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter board name\"\r\n                  required\r\n                />\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  name=\"description\"\r\n                  rows={3}\r\n                  placeholder=\"Some description about new board\"\r\n                />\r\n              </Form.Group>\r\n              <Modal.Footer>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() =>\r\n                    setCreateRequest({ isShowModal: false, request: {} })\r\n                  }\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Create\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n      <div className=\"boardList\">\r\n        {createBoard}\r\n        {boardList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Boards;\r\n","import Header from \"../header/header\";\r\nimport { useEffect, useState } from \"react\";\r\nimport avatar from \"../../images/avatar.jpeg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\n\r\nconst UPDATE_USERINFO_API = \"http://localhost:3001/users/update\";\r\nconst GET_USERINFO_API = \"http://localhost:3001/users\";\r\n\r\nfunction Users() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({});\r\n\r\n  debugger;\r\n  function getUserInfo() {\r\n    fetch(GET_USERINFO_API, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        _id: sessionStorage.getItem(\"_id\"),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === 200) {\r\n          setUserInfo({\r\n            name: res.userInfo.name,\r\n            username: res.userInfo.username,\r\n            email: res.userInfo.email,\r\n            createdAt: res.userInfo.createdAt,\r\n          });\r\n        } else {\r\n          console.log(res.result);\r\n        }\r\n      });\r\n  }\r\n\r\n  function updateUserInfo() {\r\n    fetch(UPDATE_USERINFO_API, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: userInfo.username,\r\n        name: userInfo.name,\r\n        email: userInfo.email,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.result === 200) {\r\n          setIsSuccess(true);\r\n          getUserInfo();\r\n        }\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    if (Object.keys(userInfo).length === 0) {\r\n      getUserInfo();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (isFetch) {\r\n      updateUserInfo();\r\n    }\r\n  }, [isFetch]);\r\n\r\n  function handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    const newName = form.name.value;\r\n    const newEmail = form.email.value;\r\n    setUserInfo({\r\n      username: userInfo.username,\r\n      name: newName,\r\n      email: newEmail,\r\n      createdAt: userInfo.createdAt,\r\n    });\r\n\r\n    setIsFetch(true);\r\n\r\n    event.preventDefault();\r\n    setShowModal(false);\r\n    setIsFetch(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Toast\r\n          show={isSuccess}\r\n          onClose={() => setIsSuccess(false)}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n          }}\r\n        >\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">Success</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>Your information is updated !</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n      <div>\r\n        <Modal show={showModal} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal title</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Form onSubmit={handleSubmit} action=\"/users/update\">\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Fullname</Form.Label>\r\n                <Form.Control\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Fullname\"\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Modal.Footer>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => {\r\n                    setShowModal(false);\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Save changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n      <div>\r\n        <Header />\r\n        <div className=\"page-content\">\r\n          <h3>Information</h3>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-center mt-2\">\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <img className=\"m-auto\" src={avatar} width=\"300\" height=\"300\" />\r\n              <Card.Body className=\"m-auto\">\r\n                <Card.Title>{userInfo.name}</Card.Title>\r\n                <Card.Text>Username: {userInfo.username}</Card.Text>\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroupItem>Email: {userInfo.email}</ListGroupItem>\r\n                <ListGroupItem>\r\n                  Registered: {new Date(userInfo.createdAt).toDateString()}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n              <Card.Body>\r\n                <Card.Link onClick={() => setShowModal(true)}>Edit</Card.Link>\r\n                <Card.Link href=\"#\">Reset password</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import Header from \"../header/header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./boardDetail.css\";\r\nimport AddButton from \"../../images/add.png\";\r\nimport { Container, Row, Col, Card, Table } from \"react-bootstrap\";\r\n\r\nfunction BoardDetail() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"page-content\">\r\n        <CardList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardList() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>Went Well</h2>\r\n        </Col>\r\n        <Col>\r\n          <h2>To Improve</h2>\r\n        </Col>\r\n        <Col>\r\n          <h2>Action Items</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col className=\"addButton\">\r\n          <img src={AddButton} style={{ width: \"8%\" }} />\r\n        </Col>\r\n        <Col className=\"addButton\">\r\n          <img src={AddButton} width=\"8%\" />\r\n        </Col>\r\n        <Col className=\"addButton\">\r\n          <img src={AddButton} width=\"8%\" />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              row1\r\n            </Card>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              row2\r\n            </Card>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              row3\r\n            </Card>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              row1\r\n            </Card>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              row2\r\n            </Card>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              row3\r\n            </Card>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"col-md\">\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body> row1</Card>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body className=\"\">\r\n              {\" \"}\r\n              row2\r\n            </Card>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Card body> row3</Card>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Login from \"./components/login/login\";\r\nimport Boards from \"./components/boards/boards\";\r\nimport Users from \"./components/users/users\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport BoardDetail from \"./components/boards/boardDetail\";\r\n\r\nfunction Index() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/boards/detail\" exact component={BoardDetail} />\r\n        <Route path=\"/boards\" exact component={Boards} />\r\n        <Route path=\"/users\" exact component={Users} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}